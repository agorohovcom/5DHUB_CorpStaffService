version: '3.8'

services:
  gateway-server:
    image: openjdk:17-jdk-alpine
    container_name: gateway-server
    ports:
      - "8080:8080"
    volumes:
      - ./gateway-server/target:/app
    working_dir: /app
    command: sh -c "java -jar $(ls *.jar)"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
    depends_on:
      - user-service
      - company-service
      - consul
    networks:
      - spring-cloud-network

  user-service:
    image: openjdk:17-jdk-alpine
    container_name: user-service
    ports:
      - "8081:8081"
    volumes:
      - ./user-service/target:/app
      - ./user-service/src/main/resources/db:/data
    working_dir: /app
    command: sh -c "java -jar $(ls *.jar)"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
    networks:
      - spring-cloud-network

  company-service:
    image: openjdk:17-jdk-alpine
    container_name: company-service
    ports:
      - "8082:8082"
    volumes:
      - ./company-service/target:/app
      - ./company-service/src/main/resources/db:/data
    working_dir: /app
    command: sh -c "java -jar $(ls *.jar)"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
    networks:
      - spring-cloud-network

  consul:
    image: consul:1.15.4
    container_name: consul
    ports:
      - "8500:8500"
    networks:
      - spring-cloud-network
    command: "consul agent -dev -client=0.0.0.0"

networks:
  spring-cloud-network:
    driver: bridge

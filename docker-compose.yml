#version: '3.8'
#
#services:
#  eureka-server:
#    image: openjdk:17-jdk-alpine
#    container_name: eureka-server
#    ports:
#      - "8761:8761"
#    volumes:
#      - ./eureka-server/target:/app
#    working_dir: /app
#    command: sh -c "java -jar $(ls *.jar)"
#    networks:
#      - spring-cloud-network
#
#  user-service:
#    image: openjdk:17-jdk-alpine
#    container_name: user-service
#    ports:
#      - "8081:8081"
#    volumes:
#      - ./user-service/target:/app
#      - ./user-service/src/main/resources/db:/data
#    working_dir: /app
#    command: sh -c "java -jar $(ls *.jar)"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      - eureka-server
#    networks:
#      - spring-cloud-network
#
#  company-service:
#    image: openjdk:17-jdk-alpine
#    container_name: company-service
#    ports:
#      - "8082:8082"
#    volumes:
#      - ./company-service/target:/app
#      - ./company-service/src/main/resources/db:/data
#    working_dir: /app
#    command: sh -c "java -jar $(ls *.jar)"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      - eureka-server
#    networks:
#      - spring-cloud-network
#
#networks:
#  spring-cloud-network:
#    driver: bridge

version: '3.8'

services:
  gateway-server:
    image: openjdk:17-jdk-alpine
    container_name: gateway-server
    ports:
      - "8080:8080"  # Порт Gateway
    volumes:
      - ./gateway-server/target:/app
    working_dir: /app
    command: sh -c "java -jar $(ls *.jar)"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - user-service
      - company-service
    networks:
      - spring-cloud-network

  user-service:
    image: openjdk:17-jdk-alpine
    container_name: user-service
    ports:
      - "8081:8081"
    volumes:
      - ./user-service/target:/app
      - ./user-service/src/main/resources/db:/data
    working_dir: /app
    command: sh -c "java -jar $(ls *.jar)"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring-cloud-network

  company-service:
    image: openjdk:17-jdk-alpine
    container_name: company-service
    ports:
      - "8082:8082"
    volumes:
      - ./company-service/target:/app
      - ./company-service/src/main/resources/db:/data
    working_dir: /app
    command: sh -c "java -jar $(ls *.jar)"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring-cloud-network

networks:
  spring-cloud-network:
    driver: bridge